// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/attendance-histories": {
            "get": {
                "description": "Retrieves attendance histories based on department and date filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get attendance histories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department name",
                        "name": "department",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date filter (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/clockin": {
            "post": {
                "description": "Clocks in an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Clock in",
                "parameters": [
                    {
                        "description": "Clock-in request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClockInRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/clockout": {
            "put": {
                "description": "Clocks out an employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Clock out",
                "parameters": [
                    {
                        "description": "Clock-out request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClockInRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/departments": {
            "get": {
                "description": "Retrieves all departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Get all departments",
                "responses": {}
            },
            "post": {
                "description": "Creates a new department with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Create a new department",
                "parameters": [
                    {
                        "description": "Department details",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDepartmentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/departments/{id}": {
            "get": {
                "description": "Retrieves a department by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Get a department by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "Updates a department with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Update a department by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department details",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDepartmentRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Deletes a department with the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Departments"
                ],
                "summary": "Delete a department by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/employees": {
            "get": {
                "description": "Retrieves all employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Get all employees",
                "responses": {}
            },
            "post": {
                "description": "Creates a new employee with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Employee details",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateEmployeeRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "Retrieves an employee by the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Get an employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "Updates an employee with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Update an employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee details",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateEmployeeRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Deletes an employee with the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "models.ClockInRequest": {
            "type": "object",
            "required": [
                "employee_id"
            ],
            "properties": {
                "employee_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateDepartmentRequest": {
            "type": "object",
            "required": [
                "department_name",
                "max_clock_in_time",
                "max_clock_out_time"
            ],
            "properties": {
                "department_name": {
                    "type": "string"
                },
                "max_clock_in_time": {
                    "type": "string"
                },
                "max_clock_out_time": {
                    "type": "string"
                }
            }
        },
        "models.CreateEmployeeRequest": {
            "type": "object",
            "required": [
                "address",
                "department_id",
                "employee_id",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "department_id": {
                    "type": "integer"
                },
                "employee_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateDepartmentRequest": {
            "type": "object",
            "properties": {
                "department_name": {
                    "type": "string"
                },
                "max_clock_in_time": {
                    "type": "string"
                },
                "max_clock_out_time": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
